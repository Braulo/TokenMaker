[1mdiff --git a/.gitignore b/.gitignore[m
[1mindex 0711527..bc6fe2d 100644[m
[1m--- a/.gitignore[m
[1m+++ b/.gitignore[m
[36m@@ -40,3 +40,13 @@[m [mtestem.log[m
 # System files[m
 .DS_Store[m
 Thumbs.db[m
[32m+[m
[32m+[m[32mnode_modules[m
[32m+[m[32m.env[m
[32m+[m[32mcoverage[m
[32m+[m[32mcoverage.json[m
[32m+[m[32mtypechain[m
[32m+[m
[32m+[m[32m#Hardhat files[m
[32m+[m[32mcache[m
[32m+[m[32martifacts[m
[1mdiff --git a/README.md b/README.md[m
[1mindex d713bd2..3bf122d 100644[m
[1m--- a/README.md[m
[1m+++ b/README.md[m
[36m@@ -1,27 +1,46 @@[m
[31m-# TokenMaker[m
[32m+[m[32m# Advanced Sample Hardhat Project[m
 [m
[31m-This project was generated with [Angular CLI](https://github.com/angular/angular-cli) version 14.0.3.[m
[32m+[m[32mThis project demonstrates an advanced Hardhat use case, integrating other tools commonly used alongside Hardhat in the ecosystem.[m
 [m
[31m-## Development server[m
[32m+[m[32mThe project comes with a sample contract, a test for that contract, a sample script that deploys that contract, and an example of a task implementation, which simply lists the available accounts. It also comes with a variety of other tools, preconfigured to work with the project code.[m
 [m
[31m-Run `ng serve` for a dev server. Navigate to `http://localhost:4200/`. The application will automatically reload if you change any of the source files.[m
[32m+[m[32mTry running some of the following tasks:[m
 [m
[31m-## Code scaffolding[m
[32m+[m[32m```shell[m
[32m+[m[32mnpx hardhat accounts[m
[32m+[m[32mnpx hardhat compile[m
[32m+[m[32mnpx hardhat clean[m
[32m+[m[32mnpx hardhat test[m
[32m+[m[32mnpx hardhat node[m
[32m+[m[32mnpx hardhat help[m
[32m+[m[32mREPORT_GAS=true npx hardhat test[m
[32m+[m[32mnpx hardhat coverage[m
[32m+[m[32mnpx hardhat run scripts/deploy.ts[m
[32m+[m[32mTS_NODE_FILES=true npx ts-node scripts/deploy.ts[m
[32m+[m[32mnpx eslint '**/*.{js,ts}'[m
[32m+[m[32mnpx eslint '**/*.{js,ts}' --fix[m
[32m+[m[32mnpx prettier '**/*.{json,sol,md}' --check[m
[32m+[m[32mnpx prettier '**/*.{json,sol,md}' --write[m
[32m+[m[32mnpx solhint 'contracts/**/*.sol'[m
[32m+[m[32mnpx solhint 'contracts/**/*.sol' --fix[m
[32m+[m[32m```[m
 [m
[31m-Run `ng generate component component-name` to generate a new component. You can also use `ng generate directive|pipe|service|class|guard|interface|enum|module`.[m
[32m+[m[32m# Etherscan verification[m
 [m
[31m-## Build[m
[32m+[m[32mTo try out Etherscan verification, you first need to deploy a contract to an Ethereum network that's supported by Etherscan, such as Ropsten.[m
 [m
[31m-Run `ng build` to build the project. The build artifacts will be stored in the `dist/` directory.[m
[32m+[m[32mIn this project, copy the .env.example file to a file named .env, and then edit it to fill in the details. Enter your Etherscan API key, your Ropsten node URL (eg from Alchemy), and the private key of the account which will send the deployment transaction. With a valid .env file in place, first deploy your contract:[m
 [m
[31m-## Running unit tests[m
[32m+[m[32m```shell[m
[32m+[m[32mhardhat run --network ropsten scripts/deploy.ts[m
[32m+[m[32m```[m
 [m
[31m-Run `ng test` to execute the unit tests via [Karma](https://karma-runner.github.io).[m
[32m+[m[32mThen, copy the deployment address and paste it in to replace `DEPLOYED_CONTRACT_ADDRESS` in this command:[m
 [m
[31m-## Running end-to-end tests[m
[32m+[m[32m```shell[m
[32m+[m[32mnpx hardhat verify --network ropsten DEPLOYED_CONTRACT_ADDRESS "Hello, Hardhat!"[m
[32m+[m[32m```[m
 [m
[31m-Run `ng e2e` to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.[m
[32m+[m[32m# Performance optimizations[m
 [m
[31m-## Further help[m
[31m-[m
[31m-To get more help on the Angular CLI use `ng help` or go check out the [Angular CLI Overview and Command Reference](https://angular.io/cli) page.[m
[32m+[m[32mFor faster runs of your tests and scripts, consider skipping ts-node's type checking by setting the environment variable `TS_NODE_TRANSPILE_ONLY` to `1` in hardhat's environment. For more details see [the documentation](https://hardhat.org/guides/typescript.html#performance-optimizations).[m
[1mdiff --git a/tsconfig.json b/tsconfig.json[m
[1mindex ff06eae..0b48e6f 100644[m
[1m--- a/tsconfig.json[m
[1m+++ b/tsconfig.json[m
[36m@@ -1,7 +1,7 @@[m
[31m-/* To learn more about this file see: https://angular.io/config/tsconfig. */[m
 {[m
[31m-  "compileOnSave": false,[m
[32m+[m[32m  "compileOnSave": true,[m
   "compilerOptions": {[m
[32m+[m[32m    "esModuleInterop": true,[m
     "baseUrl": "./",[m
     "outDir": "./dist/out-tsc",[m
     "forceConsistentCasingInFileNames": true,[m
[36m@@ -18,11 +18,9 @@[m
     "importHelpers": true,[m
     "target": "es2020",[m
     "module": "es2020",[m
[31m-    "lib": [[m
[31m-      "es2020",[m
[31m-      "dom"[m
[31m-    ][m
[32m+[m[32m    "lib": ["es2020", "dom"][m
   },[m
[32m+[m[32m  "include": ["./scripts", "./test", "./typechain"],[m
   "angularCompilerOptions": {[m
     "enableI18nLegacyMessageIdFormat": false,[m
     "strictInjectionParameters": true,[m
